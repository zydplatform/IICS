<%--

    Created on : 14-Jun-2018, 09:11:47
    Author     : IICS
--%>

<%@include file="../../../../include.jsp" %>
<input type="hidden" value="${facilityorderid}" id="facilityunitorderid"/>
<h4 class="col-md-11">
    <span>
        <strong>Pick List</strong>
    </span>
</h4>
<div class="col-md-1">
    <button id="functionprintPickList" style="margin-left: -1%;" class="btn btn-primary btn-sm" type="button">
        <i class="fa fa-fw fa-lg fa-print"></i>Print
    </button>
</div>
<div class="col-md-12">
    <h6>
        <span class="span-size-15">Date Created: </span><span class="span-size-15"><font color="blue">${date}</font></span><br>
        <span class="span-size-15">Generated By: </span><span class="span-size-15"><font color="blue">${name}</font></span>
    </h6>
</div>
<div class="col-md-9">
    <c:forEach items="${items}" var="item">
        <h2 class="heading" id="colouredborders">${item.genericname} &nbsp;&nbsp;&nbsp;<span><font color="green">Qty Sanctioned: </font></span><span style="font-size: 16px; background-color: #9a4691 !important; color: whitesmoke" class="badge">${item.quantityapproved}</span></h2>
        <div class="itemBatches">
            <table class="table table-hover table-striped table-sm picklistheadertable" id="cellCounts">
                <thead>
                    <tr>
                        <th class="">#</th>
                        <th class="">Cell</th>
                        <th class="">Batch</th>
                        <th class="right">Quantity</th>
                        <th class="right">Quantity Picked</th>
                    </tr>
                </thead>
                <tbody>
                    <% int p = 1;%>
                    <c:forEach items="${item.pick}" var="batch">
                        <tr data-id="${batch.stockid}" data-itemcellid="${batch.cellid}" class="${batch.cell}" id="${batch.batch}${batch.cell}">
                            <td><%=p++%></td>
                            <td>${batch.cell}</td>
                            <td>${batch.batch} <input type="hidden" value="${batch.cell}" name="${batch.batch}" class="picklistcontent"/></td>
                            <td class="right"><input type="hidden" id="itmpicked${batch.batch}${batch.cell}" value="${batch.qty}"/>${batch.qty}</td>
                            <td class="">
                                <input data-cellbatchid="${batch.batch}${batch.cell}" data-quantityapprovedtopick="${batch.qty}" max="${batch.qty}" min="0" id="itmqtypicked${batch.batch}${batch.cell}" class="form-control form-control-sm orderqquantities comparePickedToDeliveredStockoninput" data-id="${batch.stockid}" data-itemcellid="${batch.cellid}" name="${item.facilityorderitemsid}" value="" type="number"/>
                    <medium id="itmerrorpickingmsg${batch.batch}${batch.cell}" class="form-text hidedisplaycontent">
                        <font style="margin-left: 37px" color="red">
                        Can't Pick more than what was Approved [${batch.qty}].
                        </font>
                    </medium>
                    </td>
                    </tr>
                </c:forEach>
                </tbody>`
            </table>
        </div>
    </c:forEach>
</div>

<div class="col-md-3">
    <h2 class="heading" id="colouredborders"><font color="green">Walk Order</font></h2>
    <div id="content-walk-order">
        <!--            WALK ORDER LIST CONTENT-->

    </div>
</div>

<!-----Do not Delete this section Important-------->
<div class="hidedisplaycontent">
    <div id="tablesectionxv"></div>
</div>

<div class="col-md-12 right"><hr/>
    <button id="btnSavePickedOrders" class="btn btn-primary" type="button" disabled="true"><i class="fa fa-floppy-o"></i>Save Picked Orders</button>
</div>

<script>
    var checkemptypicklistinputsset = new Set();
    var picklistdata = '${jsonqtypicklist}';
    var picklistdata2 = JSON.parse(picklistdata);

    var picklisttablesize = parseInt(${picklisttablesize});
    $(document).ready(function () {
        var errorItemsPicklist2 = new Set();
        $('#cellCounts tr').click(function () {
            var itemid = $(this).attr('id');
            var orderinput = document.getElementById('itmqtypicked' + itemid).value;
            if (orderinput === null || orderinput === '' || typeof orderinput === 'undefined') {
                var qutitytopick = $('#itmpicked' + itemid).val();
                qutitytopick = qutitytopick.split(',').join('');
                $("#itmqtypicked" + itemid).val(qutitytopick);

                var orderinputnew = document.getElementById('itmqtypicked' + itemid).value;

                if (parseInt(qutitytopick) > parseInt(orderinputnew)) {
                    $("#itmerrorpickingmsg" + itemid).show();
                    if (!errorItemsPicklist2.has(itemid)) {
                        errorItemsPicklist2.add(itemid);
                        document.getElementById("btnSavePickedOrders").disabled = true;
                    }
                } else {
                    $("#itmerrorpickingmsg" + itemid).hide();
                    if (errorItemsPicklist2.has(itemid)) {
                        errorItemsPicklist2.delete(itemid);
                    }
                    if (errorItemsPicklist2.size < 1) {
                        document.getElementById("btnSavePickedOrders").disabled = false;
                    }
                }
                if (!checkemptypicklistinputsset.has(itemid)) {
                    checkemptypicklistinputsset.add(itemid);
                    var cellid = $(this).data('itemcellid');
                    var stockid = $(this).data('id');
                    for (i in picklistdata2) {
                        if (picklistdata2[i].stockid === stockid && picklistdata2[i].cellid === cellid) {
                            picklistdata2[i].qtypicked = parseInt(qutitytopick);
                            break;
                        }
                    }
                }
            }
        });

        var qtyorderedwalkorder = [];
        $('.picklistcontent').each(function () {
            qtyorderedwalkorder.push({value: this.value});
        });

        $('#tablesectionxv').html('');
        $.ajax({
            type: 'GET',
            dataType: 'JSON',
            url: 'ordersmanagement/generatewalkorder.htm',
            data: {qtyorderedvalues: JSON.stringify(qtyorderedwalkorder), selectedid: parseInt(1)},
            success: function (items) {
                if (items !== '') {
                    for (var x in items) {
                        var count = parseInt(x) + parseInt(1);
                        var data = items[x];
                        $('#tablesectionxv').append('<tr class="' + data + '"><td>' + count + '</td><td>' + data + '</td><td class="center"><input style="zoom:1.5;" class="walkordercheck" onclick="functionwalkorderarrangement(\'' + data + '\')" type="checkbox"></td></tr>');
                    }
                }
                var tablebodycontent = $('#tablesectionxv').html();
                $('#content-walk-order').html('<table class="table table-hover table-striped" id="table-walk-list-direction">' +
                        '<thead>' +
                        '<tr>' +
                        '<th>No</th>' +
                        '<th>Cell</th>' +
                        '<th class="center">Find Cells</th>' +
                        '</tr>' +
                        '</thead>' +
                        '' + tablebodycontent +
                        '<tbody>' +
                        '</tbody>`' +
                        '</table>');
            }
        });
    });

    function functionwalkorderarrangement(celllocation) {
        $('input.walkordercheck').on('change', function () {
            $('input.walkordercheck').not(this).prop('checked', false);
            $("#table-walk-list-direction tr").removeClass("yellow-background-table");
            $("#cellCounts tr").removeClass("yellow-background-table");
            $('.' + celllocation).addClass("yellow-background-table");
        });
    }

    $('#functionprintPickList').click(function () {
        $('#functionprintPickList').prop('disabled', true);
        var generalpicklist = ${jsonitems};
        var qtyorderedwalkorder = [];
        $('.picklistcontent').each(function () {
            qtyorderedwalkorder.push({value: this.value});
        });
        $.ajax({
            type: 'GET',
            url: 'ordersmanagement/generatewalkorder.htm',
            dataType: 'JSON',
            data: {qtyorderedvalues: JSON.stringify(qtyorderedwalkorder), selectedid: parseInt(2)},
            success: function (items) {
                var walkorder = items;
                $.ajax({
                    type: 'GET',
                    url: 'ordersmanagement/printPickList.htm',
                    dataType: 'text',
                    data: {walkorder: JSON.stringify(walkorder), generalpicklist: JSON.stringify(generalpicklist)},
                    success: function (textStatus) {
                        $.toast({
                            heading: 'Success',
                            text: 'PickList Printed Successfully.',
                            icon: 'success',
                            hideAfter: 2000,
                            position: 'bottom-center'
                        });
                        //OPEN PDF IN BROWSER
                        var objbuilder = '';
                        objbuilder += ('<object width="100%" height="100%"      data="data:application/pdf;base64,');
                        objbuilder += (textStatus);
                        objbuilder += ('" type="application/pdf" class="internal">');
                        objbuilder += ('<embed src="data:application/pdf;base64,');
                        objbuilder += (textStatus);
                        objbuilder += ('" type="application/pdf" />');
                        objbuilder += ('</object>');
                        $('#content').html(objbuilder);
                    }, error: function (textStatus) {
                        $.toast({
                            heading: 'Error',
                            text: 'An unexpected error occured while trying to Print PickList.',
                            icon: 'error'
                        });
                        window.location = '#close';
                    }
                });
            }
        });
    });

    $('#btnSavePickedOrders').click(function () {

        if (picklisttablesize > checkemptypicklistinputsset.size && checkemptypicklistinputsset.size !== 0) {
            $.confirm({
                icon: 'fa fa-warning',
                title: '<strong><font color="red">Warning!</font></strong>',
                content: '' + '<strong style="font-size: 18px;"><font color="">Some Order Items have no values.<br> <span style="color:red; font-size: 22px"> Are you sure you want to Continue?</span></font></strong>',
                boxWidth: '30%',
                useBootstrap: false,
                type: 'red',
                typeAnimated: true,
                closeIcon: true,
                buttons: {
                    somethingElse: {
                        text: 'Yes',
                        btnClass: 'btn-purple',
                        action: function () {
                            var facilityunitorderid = $('#facilityunitorderid').val();
                            document.getElementById("btnSavePickedOrders").disabled = true;
                            $.ajax({
                                type: 'GET',
                                data: {facilityorderid: facilityunitorderid, qtypickedvalues: JSON.stringify(picklistdata2)},
                                url: 'ordersmanagement/submitOrderePickedList.htm',
                                success: function (items) {
                                    window.location = '#close';
                                    ajaxSubmitData('ordersmanagement/orderprocessmainpage', 'workpane', 'act=a&i=0&b=a&c=a&d=0&ofst=1&maxR=100&sStr=', 'GET');
                                }
                            });
                        }
                    },
                    No: {
                        text: 'NO',
                        btnClass: 'btn-red',
                        action: function () {

                        }
                    }
                }
            });
        }

        if (picklisttablesize === checkemptypicklistinputsset.size) {
            var facilityunitorderid = $('#facilityunitorderid').val();
            document.getElementById("btnSavePickedOrders").disabled = true;
            $.ajax({
                type: 'GET',
                data: {facilityorderid: facilityunitorderid, qtypickedvalues: JSON.stringify(picklistdata2)},
                url: 'ordersmanagement/submitOrderePickedList.htm',
                success: function (items) {
                    window.location = '#close';
                    ajaxSubmitData('ordersmanagement/orderprocessmainpage', 'workpane', 'act=a&i=0&b=a&c=a&d=0&ofst=1&maxR=100&sStr=', 'GET');
                }
            });
        }

        if (checkemptypicklistinputsset.size === 0) {
            $.confirm({
                icon: 'fa fa-warning',
                title: '<strong>Alert: <font color="red">Can not proceed!</font></strong>',
                content: '' + '<strong style="font-size: 18px;"><font color="red">Please Fill in Item Order Quantities To Hand Over.</font></strong>',
                boxWidth: '30%',
                useBootstrap: false,
                type: 'red',
                typeAnimated: true,
                closeIcon: true,
                buttons: {
                    somethingElse: {
                        text: 'OK',
                        btnClass: 'btn-purple',
                        action: function () {

                        }
                    }
                }
            });
        }

    });

    var errorItemsPicklist = new Set();
    $('.comparePickedToDeliveredStockoninput').on('input', function () {
        var cellbatchid = $(this).data('cellbatchid');
        var approvestockquantity = $(this).data('quantityapprovedtopick');
        var pickedstock = $(this).val();

        if (parseInt(pickedstock) > parseInt(approvestockquantity)) {
            $("#itmerrorpickingmsg" + cellbatchid).show();
            if (!errorItemsPicklist.has(cellbatchid)) {
                errorItemsPicklist.add(cellbatchid);
                document.getElementById("btnSavePickedOrders").disabled = true;
            }
        } else {
            $("#itmerrorpickingmsg" + cellbatchid).hide();
            if (errorItemsPicklist.has(cellbatchid)) {
                errorItemsPicklist.delete(cellbatchid);
            }
            if (errorItemsPicklist.size < 1) {
                document.getElementById("btnSavePickedOrders").disabled = false;
            }
        }
        if (pickedstock === null || pickedstock === '' || typeof pickedstock === 'undefined') {
            if (checkemptypicklistinputsset.has(cellbatchid)) {
                checkemptypicklistinputsset.delete(cellbatchid);
            }
        } else {
            if (parseInt(pickedstock) < parseInt(approvestockquantity) || parseInt(pickedstock) === parseInt(approvestockquantity)) {
                var cellid = $(this).data('itemcellid');
                var stockid = $(this).data('id');
                for (i in picklistdata2) {
                    if (picklistdata2[i].stockid === stockid && picklistdata2[i].cellid === cellid) {
                        picklistdata2[i].qtypicked = parseInt(pickedstock);
                        break;
                    }
                }
            }
            if (!checkemptypicklistinputsset.has(cellbatchid)) {
                checkemptypicklistinputsset.add(cellbatchid);
            }
        }
    });
</script>