<%-- 
    Document   : pickList
    Created on : Apr 12, 2019, 9:49:20 AM
    Author     : IICS
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%@include file="../../include.jsp"%>
<input type="hidden" value="${prescriptionid}" id="prescriptionid"/>
<!--<div class="col-md-1">-->
<!--    <button id="functionprintPickList" style="margin-left: -1%;" class="btn btn-primary btn-sm" type="button">
        <i class="fa fa-fw fa-lg fa-print"></i>Print
    </button>-->
<!--</div>-->
<c:if test="${items.size() > 0}">
<div class="row">
    <div class="col-md-12">
        <h6>
            <span class="span-size-15">Date Created: </span><span class="span-size-15"><font color="blue">${date}</font></span> &nbsp; &nbsp;
            <span class="span-size-15">Generated By: </span><span class="span-size-15"><font color="blue">${name}</font></span> &nbsp; &nbsp; <br /><br />
            <span class="span-size-15">Prescription For: </span><span class="span-size-15"><font color="blue">${patientname}</font></span> &nbsp; &nbsp;
            <span class="span-size-15">Patient Number: </span><span class="span-size-15"><font color="blue">${patientno}</font></span> &nbsp; &nbsp;
            <span class="span-size-15">Visit Number: </span><span class="span-size-15"><font color="blue">${visitnumber}</font></span>
        </h6>
        <hr />
    </div>
</div>
</c:if>        
<div class="row">
    <c:if test="${items.size() > 0}">
    <div class="col-md-9">
        <c:forEach items="${items}" var="item">
            <h2 class="heading" id="colouredborders">${item.genericname} &nbsp;&nbsp;&nbsp;<span><font color="green">Qty Approved: </font></span><span style="font-size: 16px; background-color: #9a4691 !important; color: whitesmoke" class="badge">${item.quantityapproved}</span></h2>
            <div class="itemBatches">
                <c:if test="${item.pick.size() > 0}">
                    <table class="table table-hover table-striped table-sm picklistheadertable" id="cellCounts">
                        <thead>
                            <tr>
                                <th class="">#</th>
                                <th class="">Cell</th>
                                <th class="">Batch</th>
                                <th class="" style="width: 20%;">Quantity</th>
                                <th class="right" style="width: 20%;">Quantity Picked</th>
                                <th class="center"> Use Package</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% int p = 1;%>
                            <c:forEach items="${item.pick}" var="batch">
                                <tr data-id="${batch.stockid}" data-itemcellid="${batch.cellid}" class="${batch.cell}" id="${batch.batch}${batch.cell}">
                                    <td><%=p++%></td>
                                    <td>${batch.cell}</td>
                                    <td>${batch.batch} <input type="hidden" value="${batch.cell}" name="${batch.batch}" class="picklistcontent"/></td>
                                    <td class=""><input type="hidden" id="itmpicked${batch.batch}${batch.cell}" value="${batch.qty}"/>${batch.qty}</td>
                                    <td class="">
                                        <input data-cellbatchid="${batch.batch}${batch.cell}" 
                                               data-quantityapprovedtopick="${batch.qty}" max="${batch.qty}" min="0" 
                                               id="itmqtypicked${batch.batch}${batch.cell}" 
                                               class="form-control form-control-sm orderqquantities comparePickedToDeliveredStockoninput" 
                                               data-id="${batch.stockid}" data-itemcellid="${batch.cellid}" name="${item.prescriptionitemsid}" 
                                               data-itemid="${item.itemid}" value="" type="number"/>
                                        <medium id="itmerrorpickingmsg${batch.batch}${batch.cell}" class="form-text hidedisplaycontent">
                                            <font style="margin-left: 37px" color="red">
                                            Can't Pick more than what was Approved [${batch.qty}].
                                            </font>
                                        </medium>
                                    </td>
                                    <td class="center">
                                        <div class="toggle-flip" style="margin-top: 8px;">
                                            <label>
                                                <input type="checkbox" value="" class="item-toggle" id="use-package-${batch.batch}${batch.cell}"  onchange="testFunc(this, ${batch.cellid}, ${batch.stockid});" <c:if test="${item.hasPackages == Boolean.FALSE}">disabled="disabled"</c:if>/>
                                                <span class="flip-indecator" style="height: 10px !important; margin-top: -13px !important;"  data-toggle-on="Yes" data-toggle-off="No"></span>
                                            </label>
                                        </div>     
                                    </td>
                            </tr>
                        </c:forEach>                    
                        </tbody>
                    </table>
                </c:if>
                <c:if test="${item.pick.size() <= 0}">
                    <h6 class="text-center">This Item Is Out Of Stock.</h6>
                </c:if>
            </div>
        </c:forEach>
    </div>
    </c:if>
    <c:if test="${items.size() <= 0}">
            <div class="col-md-12 center">
                <h3>No Items To Pick.</h3>
            </div>
        </c:if>
    <c:if test="${items.size() > 0}">
    <div class="col-md-3">
        <h2 class="heading" id="colouredborders"><font color="green">Walk Order</font></h2>
        <div id="content-walk-order">
            <!--            WALK ORDER LIST CONTENT-->

        </div>
    </div>
    </c:if>
</div>    
<!-----Do not Delete this section Important-------->
<div class="hidedisplaycontent">
    <div id="tablesectionxv"></div>
</div>
<c:if test="${items.size() > 0}">
<div class="row">
    <div class="col-md-12 clearfix"><hr/>
        <button id="btn-save-picked-prescription-items" class="btn btn-primary pull-right text-white" 
                type="button" disabled="disabled"  style="margin-left: 0.91%"
                data-patient-visit-id="${patientvisitid}"
                data-prescription-id="${prescriptionid}" data-staff-id="${staffid}" 
                data-facility-unit-id="${facilityunitid}"><i class="fa fa-floppy-o"></i>Save</button>
        <button id="print-prescription-pick" class="btn btn-primary pull-right text-white" 
                style="margin-left: 0.91%" data-patient-visit-id="${patientvisitid}"
                data-prescription-id="${prescriptionid}" data-origin-unit-id="${originunitid}"
                data-prescriber-id="${prescriberid}"><i class="fa fa-print"></i> Print</button>
        <button id="add-to-queue-from-picking" class="btn btn-warning pull-right text-white" 
                style="margin-left: 0.91%" data-patient-visit-id="${patientvisitid}"
                data-prescription-id="${prescriptionid}" data-origin-unit-id="${originunitid}"
                data-prescriber-id="${prescriberid}">Return To Queue</button>
    </div>
</div>
</c:if>
<script>
    var checkemptypicklistinputsset = new Set();
    var picklistdata = '${jsonqtypicklist}';
    var picklistdata2 = JSON.parse(picklistdata);
    var picklisttablesize = parseInt(${picklisttablesize}); 
    $(document).ready(function () {  
        toggelSaveBtn();
        var errorItemsPicklist2 = new Set();
        $('#cellCounts tr').click(function () {
            var itemid = $(this).attr('id');
            var orderinput = document.getElementById('itmqtypicked' + itemid).value;
            if (orderinput === null || orderinput === '' || typeof orderinput === 'undefined') {
                var qutitytopick = $('#itmpicked' + itemid).val();
                qutitytopick = qutitytopick.split(',').join('');
                $("#itmqtypicked" + itemid).val(qutitytopick);

                var orderinputnew = document.getElementById('itmqtypicked' + itemid).value;

                if (parseInt(qutitytopick) > parseInt(orderinputnew)) {
                    $("#itmerrorpickingmsg" + itemid).show();
                    if (!errorItemsPicklist2.has(itemid)) {
                        errorItemsPicklist2.add(itemid);
                        document.getElementById("btn-save-picked-prescription-items").disabled = true;
                    }
                } else {
                    $("#itmerrorpickingmsg" + itemid).hide();
                    if (errorItemsPicklist2.has(itemid)) {
                        errorItemsPicklist2.delete(itemid);
                    }
                    if (errorItemsPicklist2.size < 1) {
                        document.getElementById("btn-save-picked-prescription-items").disabled = false;
                    }
                }
                if (!checkemptypicklistinputsset.has(itemid)) {
                    checkemptypicklistinputsset.add(itemid);
                    var cellid = $(this).data('itemcellid');
                    var stockid = $(this).data('id');
                    for (i in picklistdata2) {
                        if (picklistdata2[i].stockid === stockid && picklistdata2[i].cellid === cellid) {
                            picklistdata2[i].qtypicked = parseInt(qutitytopick);
                            break;
                        }
                    }
                }
            }
        });

        var qtyorderedwalkorder = [];
        $('.picklistcontent').each(function () {
            qtyorderedwalkorder.push({value: this.value});
        });

        $('#tablesectionxv').html('');
        $.ajax({
            type: 'GET',
            dataType: 'JSON',
            url: 'dispensing/generatewalkorder.htm',
            data: {qtyorderedvalues: JSON.stringify(qtyorderedwalkorder), selectedid: parseInt(1)},
            success: function (items) {
                if (items !== '') {
                    for (var x in items) {
                        var count = parseInt(x) + parseInt(1);
                        var data = items[x];
                        $('#tablesectionxv').append('<tr class="' + data + '"><td>' + count + '</td><td>' + data + '</td><td class="center"><input style="zoom:1.5;" class="walkordercheck" onclick="functionwalkorderarrangement(\'' + data + '\')" type="checkbox"></td></tr>');
                    }
                }
                var tablebodycontent = $('#tablesectionxv').html();
                $('#content-walk-order').html('<table class="table table-hover table-striped" id="table-walk-list-direction">' +
                        '<thead>' +
                        '<tr>' +
                        '<th>No</th>' +
                        '<th>Cell</th>' +
                        '<th class="center">Find Cells</th>' +
                        '</tr>' +
                        '</thead>' +
                        '' + tablebodycontent +
                        '<tbody>' +
                        '</tbody>' +
                        '</table>');
            }
        });
    });

    function functionwalkorderarrangement(celllocation) {
        $('input.walkordercheck').on('change', function () {
            $('input.walkordercheck').not(this).prop('checked', false);
            $("#table-walk-list-direction tr").removeClass("yellow-background-table");
            $("#cellCounts tr").removeClass("yellow-background-table");
            $('.' + celllocation).addClass("yellow-background-table");
        });
    }

    $('#functionprintPickList').click(function () {
        $('#functionprintPickList').prop('disabled', true);
        var generalpicklist = ${jsonitems};
        var qtyorderedwalkorder = [];
        $('.picklistcontent').each(function () {
            qtyorderedwalkorder.push({value: this.value});
        });
        $.ajax({
            type: 'GET',
            url: 'dispensing/generatewalkorder.htm',
            dataType: 'JSON',
            data: {qtyorderedvalues: JSON.stringify(qtyorderedwalkorder), selectedid: parseInt(2)},
            success: function (items) {
                var walkorder = items;
                $.ajax({
                    type: 'GET',
                    url: 'dispensing/printPickList.htm',
                    dataType: 'text',
                    data: {walkorder: JSON.stringify(walkorder), generalpicklist: JSON.stringify(generalpicklist)},
                    success: function (textStatus) {
                        $.toast({
                            heading: 'Success',
                            text: 'PickList Printed Successfully.',
                            icon: 'success',
                            hideAfter: 2000,
                            position: 'bottom-center'
                        });
                        //OPEN PDF IN BROWSER
                        var objbuilder = '';
                        objbuilder += ('<object width="100%" height="100%"      data="data:application/pdf;base64,');
                        objbuilder += (textStatus);
                        objbuilder += ('" type="application/pdf" class="internal">');
                        objbuilder += ('<embed src="data:application/pdf;base64,');
                        objbuilder += (textStatus);
                        objbuilder += ('" type="application/pdf" />');
                        objbuilder += ('</object>');
                        $('#content').html(objbuilder);
                    }, error: function (textStatus) {
                        $.toast({
                            heading: 'Error',
                            text: 'An unexpected error occured while trying to Print PickList.',
                            icon: 'error'
                        });
                        window.location = '#close';
                    }
                });
            }
        });
    });

    $('#btn-save-picked-prescription-items').click(function () {
        var caller = $(this);
        var prescriptionId = caller.data('prescription-id');
        var patientVisitId = caller.data('patient-visit-id');
        var staffId = caller.data('staff-id');
        var facilityUnitId = caller.data('facility-unit-id');         
        if(picklisttablesize <= 0){
            recordUnservicedPrescription(prescriptionId);
            serviceprescription(patientVisitId);
            closePoppedPrescription({ prescriptionid: prescriptionId });
        } else if(picklisttablesize > 0){
            if (picklisttablesize > checkemptypicklistinputsset.size && checkemptypicklistinputsset.size !== 0) {
                $.confirm({
                    icon: 'fa fa-warning',
                    title: '<strong><font color="red">Warning!</font></strong>',
                    content: '' + '<strong style="font-size: 18px;"><font color="">Some Items have no values.<br> <span style="color:red; font-size: 22px"> Are you sure you want to Continue?</span></font></strong>',
                    boxWidth: '30%',
                    useBootstrap: false,
                    type: 'red',
                    typeAnimated: true,
                    closeIcon: true,
                    buttons: {
                        somethingElse: {
                            text: 'Yes',
                            btnClass: 'btn-purple',
                            action: function () {
                                var prescriptionid = $('#prescriptionid').val();
                                document.getElementById("btn-save-picked-prescription-items").disabled = true;
                                $.ajax({
                                    type: 'GET',
                                    data: {prescriptionid: prescriptionid, qtypickedvalues: JSON.stringify(picklistdata2)},
                                    url: 'dispensing/savepickeditems.htm',
                                    success: function (data) {
                                        var items = JSON.parse(data);
                                        var result = items.result;
//                                        $('span.ready-to-issue-prescription-count').text(items.readyToIssueCount);
                                        if (result.toString().toLowerCase() === "success".toLowerCase()) {
    //                                        ajaxSubmitData('dispensing/dispensingmenu.htm', 'workpane', 'act=a&i=0&b=a&c=a&d=0&ofst=1&maxR=100&sStr=', 'GET');
                                            pushPrescription('dispensing/pushprescription.htm', { patientvisitid: patientVisitId, prescriptionid: prescriptionId, staffid: staffId, facilityunitid: facilityUnitId, queuestage: 'dispensing' });                                        
                                        } else {
                                            $('#btn-save-picked-prescription-items').prop("disabled", false);
                                            $.toast({
                                                heading: 'Error',
                                                text: 'Operation Failed. Please Try Again',
                                                icon: 'error',
                                                hideAfter: 2000,
                                                position: 'mid-center'
                                            });
                                        }
                                    }
                                });
                            }
                        },
                        No: {
                            text: 'NO',
                            btnClass: 'btn-red',
                            action: function () {
                            }
                        }
                    }
                });
            }
            if (picklisttablesize === checkemptypicklistinputsset.size) {
                var prescriptionid = $('#prescriptionid').val();
                document.getElementById("btn-save-picked-prescription-items").disabled = true;
                $.ajax({
                    type: 'GET',
                    data: {prescriptionid: prescriptionid, qtypickedvalues: JSON.stringify(picklistdata2)},
                    url: 'dispensing/savepickeditems.htm',
                    success: function (data) {
                        var items = JSON.parse(data);
                        var result = items.result;
                        if (result.toString().toLowerCase() === "success".toLowerCase()) {
    //                        ajaxSubmitData('dispensing/dispensingmenu.htm', 'workpane', 'act=a&i=0&b=a&c=a&d=0&ofst=1&maxR=100&sStr=', 'GET');
                            pushPrescription('dispensing/pushprescription.htm', { patientvisitid: patientVisitId, prescriptionid: prescriptionId, staffid: staffId, facilityunitid: facilityUnitId, queuestage: 'dispensing' });
                        } else {
                            $('#btn-save-picked-prescription-items').prop("disabled", false);
                            $.toast({
                                heading: 'Error',
                                text: 'Operation Failed. Please Try Again',
                                icon: 'error',
                                hideAfter: 2000,
                                position: 'mid-center'
                            });
                        }
                    }
                });
            }
            if (checkemptypicklistinputsset.size === 0) {
                $.confirm({
                    icon: 'fa fa-warning',
                    title: '<strong>Alert: <font color="red">Can not proceed!</font></strong>',
                    content: '' + '<strong style="font-size: 18px;"><font color="red">Please Fill in Item Order Quantities To Hand Over.</font></strong>',
                    boxWidth: '30%',
                    useBootstrap: false,
                    type: 'red',
                    typeAnimated: true,
                    closeIcon: true,
                    buttons: {
                        somethingElse: {
                            text: 'OK',
                            btnClass: 'btn-purple',
                            action: function () {
                            }
                        }
                    }
                });
            }
        }
    });
    var errorItemsPicklist = new Set();
    $('.comparePickedToDeliveredStockoninput').on('input', function () {
        var cellbatchid = $(this).data('cellbatchid');
        var approvestockquantity = $(this).data('quantityapprovedtopick');
        var pickedstock = $(this).val();

        if (parseInt(pickedstock) > parseInt(approvestockquantity)) {
            $("#itmerrorpickingmsg" + cellbatchid).show();
            if (!errorItemsPicklist.has(cellbatchid)) {
                errorItemsPicklist.add(cellbatchid);
                document.getElementById("btn-save-picked-prescription-items").disabled = true;
            }
        } else {
            $("#itmerrorpickingmsg" + cellbatchid).hide();
            if (errorItemsPicklist.has(cellbatchid)) {
                errorItemsPicklist.delete(cellbatchid);
            }
            if (errorItemsPicklist.size < 1) {
                document.getElementById("btn-save-picked-prescription-items").disabled = false;
            }
        }
        if (pickedstock === null || pickedstock === '' || typeof pickedstock === 'undefined') {
            if (checkemptypicklistinputsset.has(cellbatchid)) {
                checkemptypicklistinputsset.delete(cellbatchid);
            }
        } else {
            if (parseInt(pickedstock) < parseInt(approvestockquantity) || parseInt(pickedstock) === parseInt(approvestockquantity)) {
                var cellid = $(this).data('itemcellid');
                var stockid = $(this).data('id');
                for (i in picklistdata2) {
                    if (picklistdata2[i].stockid === stockid && picklistdata2[i].cellid === cellid) {
                        picklistdata2[i].qtypicked = parseInt(pickedstock);
                        break;
                    }
                }
            }
            if (!checkemptypicklistinputsset.has(cellbatchid)) {
                checkemptypicklistinputsset.add(cellbatchid);
            }
        }
    });
    $('#add-to-queue-from-picking').on('click', function(){
        var prescriptionId = $(this).data('prescription-id');
        addBackToQueue(prescriptionId, 'picking');
    });
    $('#print-prescription-pick').on('click', function (e) {
        var button = $(this);
        button.prop('disabled', true);
        var prescriptionid = $(this).data('prescription-id');
        var prescriberid = $(this).data('prescriber-id');
        var patientVisitId = $(this).data('patient-visit-id');
        $.confirm({
            title: 'Print',
            type: 'purple',
            typeAnimated: true,
            boxWidth: '30%',
            closeIcon: true,
            useBootstrap: false,
            content: '<select id="prescription-print-type" class="form-control">' +
                    '<option value="outofstock">Out Of Stock Items</option>' +
                    '<option value="all">All Items</option>' +
                    +'</select>',
            buttons: {
                ok: {
                    text: 'Ok',
                    btnClass: 'btn btn-purple',
                    action: function () {
                        var selectElemet = this.$content.find('#prescription-print-type');
                        printPrescription(selectElemet.val(), prescriptionid, prescriberid, patientVisitId);
                    }
                }
            }
        });
        button.prop('disabled', false);
    });
    function toggelSaveBtn(){
        if(picklisttablesize > 0){
            $('#btn-save-picked-prescription-items').prop('disabled', true);
        } else {
            $('#btn-save-picked-prescription-items').text('Close');
            $('#btn-save-picked-prescription-items').prop('disabled', false);
        }
    }
    function testFunc(obj, cellid, stockid){
        var usePackage = obj.checked;
        for (i in picklistdata2) {
            if (picklistdata2[i].stockid === stockid && picklistdata2[i].cellid === cellid) {
                //                            
                picklistdata2[i].usepackage = usePackage;
                //
                break;
            }
        }
    }
</script>
